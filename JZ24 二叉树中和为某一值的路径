import java.util.ArrayList;
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    private ArrayList<ArrayList<Integer>> listAll = new ArrayList<ArrayList<Integer>>();
    private ArrayList<Integer> list = new ArrayList<Integer>();
    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root,int target) {
        if(root== null){
            return listAll;
        }
        list.add(root.val); //将路径中的值放入
        target -= root.val;
        if(target==0 && root.left==null && root.right==null){
            listAll.add(new ArrayList<Integer>(list)); //形成值的数值
        }
        if(root.left!=null) FindPath(root.left,target);
        if(root.right!=null) FindPath(root.right,target);
        list.remove(list.size()-1);//回溯
        return listAll;
    }
}
