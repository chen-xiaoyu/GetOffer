import java.util.Arrays;
public class Solution {
    public boolean VerifySquenceOfBST(int [] sequence) {
        int length = sequence.length;
        if(length == 0){return false;}
        int root = sequence[length-1];
        int i = 0;
        for(;i<length-1;i++){ //寻找右子树结点
            if(sequence[i]>root){
                break;
            }
        }
        for(int j=i;j<length-1;j++){//判断右子树结点是否满足要求
            if(sequence[j]<root){
                return false;
            }
        }
        boolean left = true;
        boolean right = true;
        if(i>0){ //递归判断左右子树是否符合要求
             left =VerifySquenceOfBST(Arrays.copyOfRange(sequence,0,i)); //用到arrays.copyOfRange()函数，其中，最后一个序号是不包含在内的。
        }
        if(i<length-1){
            right = VerifySquenceOfBST(Arrays.copyOfRange(sequence,i,length-1));
        }
        return left&&right;
    }
}
